数据结构：数据存储于内存时，决定了数据顺序和位置关系的便是“数据结构”
链表：每个数据都有1个“指针”，它指向下一个数据的内存地址，访问数据O(n),添加和删除O(1)
数组：数据按顺序存储在内存的连续空间内，每个数据的内存地址（在内存上的位置）都可以通过数组下标算出，访问数据O(1),添加和删除O(n)
栈：栈最后添加的数据最先被取出，即“后进先出”结构，称为Last In First Out，简称LIFO
队列：最先进去的数据最先被取来，即“先进先出”的结构，称为First In First Out，简称FIFO
哈希表：哈希表存储的是由键（key）和值（value）组成的数据，在哈希表中，可以利用哈希函数快速访问到数组中的目标数据。如果发生哈希冲突，就使用链表进行存储
堆：堆是一种图的树形结构，被用于实现“优先队列”
    优先队列是一种数据结构，可以自由添加数据，但取出数据时要从最小值开始按顺序取出。在堆的树形结构中，各个顶点被称为“结点”（node），数据就存储在这些结点中
    结点的排列顺序为从上到下，同一行里则为从左到右；堆中的每个结点最多有两个子结点；子结点必定大于父结点，如果父结点大于子结点，则不需要交换父子结点的位置
    堆中最顶端的数据始终最小，所以无论数据量有多少，取出最小值的时间复杂度都为O（1）；重构树的时间复杂度便为O（logn），添加数据需要的运行时间与树的高度成正比，也是O（logn）。
